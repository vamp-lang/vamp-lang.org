import{S as ye,i as _e,s as xe,k as b,e as s,t as i,K as Ee,d as t,m as y,c as l,a as n,h as r,b as a,g as fe,G as e,n as re}from"../chunks/index-38bdd91b.js";function Ve(be){let V,p,c,m,w,O,W,S,G,K,h,A,M,N,d,j,_,B,Q,T,v,u,P,U,X,o,Y,x,Z,$,E,ee,te,ae,g,I,se,le,k,ne;return{c(){V=b(),p=s("main"),c=s("div"),m=s("div"),w=s("h2"),O=i("Safety"),W=b(),S=s("p"),G=i(`Vamp is a purely functional programming language with strict typing.
        Vamp's type inference makes the use of explicit type hints optional in
        most cases. Assertion types provide strong guarantees about program
        correctness throughout the development process.`),K=b(),h=s("div"),A=s("h2"),M=i("Simplicity"),N=b(),d=s("p"),j=i(`Vamp has a minimalist syntax and small set of composable primitive types
        that are easy to learn. A high-level overview of the language fits
        nicely on `),_=s("a"),B=i("a single page"),Q=i(`. Once Vamp reaches the
        1.0 milestone, the core language will remain stable.`),T=b(),v=s("div"),u=s("div"),P=s("h2"),U=i("Productivity"),X=b(),o=s("p"),Y=i(`Vamp reduces decision fatigue by providing batteries-included tooling
        for package management, linting, autoformatting, as well as a `),x=s("a"),Z=i("comprehensive standard library"),$=i(`. A
        `),E=s("a"),ee=i("Language Server Protocol (LSP)"),te=i(`
        implementation makes editor integration seamless.`),ae=b(),g=s("div"),I=s("h2"),se=i("Portability"),le=b(),k=s("p"),ne=i(`Vamp aims to eventually target native, WebAssembly, and JavaScript.
        Cross-platform code will be written with conditional imports and FFI to
        C-family, Rust, and JavaScript.`),this.h()},l(f){Ee('[data-svelte="svelte-1p1zzsd"]',document.head).forEach(t),V=y(f),p=l(f,"MAIN",{class:!0});var C=n(p);c=l(C,"DIV",{class:!0});var z=n(c);m=l(z,"DIV",{class:!0});var F=n(m);w=l(F,"H2",{class:!0});var oe=n(w);O=r(oe,"Safety"),oe.forEach(t),W=y(F),S=l(F,"P",{class:!0});var pe=n(S);G=r(pe,`Vamp is a purely functional programming language with strict typing.
        Vamp's type inference makes the use of explicit type hints optional in
        most cases. Assertion types provide strong guarantees about program
        correctness throughout the development process.`),pe.forEach(t),F.forEach(t),K=y(z),h=l(z,"DIV",{class:!0});var H=n(h);A=l(H,"H2",{class:!0});var ce=n(A);M=r(ce,"Simplicity"),ce.forEach(t),N=y(H),d=l(H,"P",{class:!0});var J=n(d);j=r(J,`Vamp has a minimalist syntax and small set of composable primitive types
        that are easy to learn. A high-level overview of the language fits
        nicely on `),_=l(J,"A",{href:!0,class:!0});var me=n(_);B=r(me,"a single page"),me.forEach(t),Q=r(J,`. Once Vamp reaches the
        1.0 milestone, the core language will remain stable.`),J.forEach(t),H.forEach(t),z.forEach(t),T=y(C),v=l(C,"DIV",{class:!0});var L=n(v);u=l(L,"DIV",{class:!0});var R=n(u);P=l(R,"H2",{class:!0});var he=n(P);U=r(he,"Productivity"),he.forEach(t),X=y(R),o=l(R,"P",{class:!0});var D=n(o);Y=r(D,`Vamp reduces decision fatigue by providing batteries-included tooling
        for package management, linting, autoformatting, as well as a `),x=l(D,"A",{href:!0,class:!0});var de=n(x);Z=r(de,"comprehensive standard library"),de.forEach(t),$=r(D,`. A
        `),E=l(D,"A",{href:!0,class:!0});var ve=n(E);ee=r(ve,"Language Server Protocol (LSP)"),ve.forEach(t),te=r(D,`
        implementation makes editor integration seamless.`),D.forEach(t),R.forEach(t),ae=y(L),g=l(L,"DIV",{class:!0});var q=n(g);I=l(q,"H2",{class:!0});var ue=n(I);se=r(ue,"Portability"),ue.forEach(t),le=y(q),k=l(q,"P",{class:!0});var ge=n(k);ne=r(ge,`Vamp aims to eventually target native, WebAssembly, and JavaScript.
        Cross-platform code will be written with conditional imports and FFI to
        C-family, Rust, and JavaScript.`),ge.forEach(t),q.forEach(t),L.forEach(t),C.forEach(t),this.h()},h(){document.title="Vamp",a(w,"class","svelte-hnppmb"),a(S,"class","svelte-hnppmb"),a(m,"class","column svelte-hnppmb"),a(A,"class","svelte-hnppmb"),a(_,"href","/cheatsheet"),a(_,"class","svelte-hnppmb"),a(d,"class","svelte-hnppmb"),a(h,"class","column svelte-hnppmb"),a(c,"class","columns svelte-hnppmb"),a(P,"class","svelte-hnppmb"),a(x,"href","/docs"),a(x,"class","svelte-hnppmb"),a(E,"href","https://microsoft.github.io/language-server-protocol/"),a(E,"class","svelte-hnppmb"),a(o,"class","svelte-hnppmb"),a(u,"class","column svelte-hnppmb"),a(I,"class","svelte-hnppmb"),a(k,"class","svelte-hnppmb"),a(g,"class","column svelte-hnppmb"),a(v,"class","columns svelte-hnppmb"),a(p,"class","svelte-hnppmb")},m(f,ie){fe(f,V,ie),fe(f,p,ie),e(p,c),e(c,m),e(m,w),e(w,O),e(m,W),e(m,S),e(S,G),e(c,K),e(c,h),e(h,A),e(A,M),e(h,N),e(h,d),e(d,j),e(d,_),e(_,B),e(d,Q),e(p,T),e(p,v),e(v,u),e(u,P),e(P,U),e(u,X),e(u,o),e(o,Y),e(o,x),e(x,Z),e(o,$),e(o,E),e(E,ee),e(o,te),e(v,ae),e(v,g),e(g,I),e(I,se),e(g,le),e(g,k),e(k,ne)},p:re,i:re,o:re,d(f){f&&t(V),f&&t(p)}}}class Se extends ye{constructor(V){super(),_e(this,V,null,Ve,xe,{})}}export{Se as default};
